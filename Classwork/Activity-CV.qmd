---
title: "Cross-Validation"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
---

```{r, eval = TRUE, version = "none"}
templar::versions_quarto_multilingual(global_eval = FALSE, to_jupyter = TRUE, warn_edit = FALSE)
```

## Setup

Declare your libraries:

```{r, version = "R"}
#| label: libraries-r
#| include: false
library(tidyverse)
library(tidymodels)
```

```{python, version = "python"}
#| label: libraries-py
#| include: false
import pandas as pd
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
from sklearn.model_selection import cross_val_score, GridSearchCV, KFold
from sklearn.preprocessing import PolynomialFeatures
```

## Code from slides

```{r, version = "R"}
ins <- read_csv("https://www.dropbox.com/s/bocjjyo1ehr5auz/insurance_costs_1.csv?dl=1")
head(ins)
```

```{r, version = "R"}
lr_mod <- linear_reg() %>%
  set_mode("regression") %>%
  set_engine("lm")
```


```{python, version = "python"}
ins = pd.read_csv("https://www.dropbox.com/s/bocjjyo1ehr5auz/insurance_costs_1.csv?dl=1")
ins.head()
```

```{python, version = "python"}
lm = LinearRegression()

poly = PolynomialFeatures(degree=20)
x_dat = ins["bmi"].values.reshape(-1,1)
x_dat_20 = poly.fit_transform(x_dat)

poly_mod_1 = lm.fit(x_dat, y = ins["charges"])

poly_mod_20 = lm.fit(x_dat_20, y = ins["charges"])
```

```{python, version = "python"}
cross_validation = KFold(n_splits=10)

scores_1 = cross_val_score(poly_mod_1, x_dat, ins["charges"], scoring="neg_mean_squared_error", cv=cross_validation)

scores_20 = cross_val_score(poly_mod_20, x_dat_20, ins["charges"], scoring="neg_mean_squared_error", cv=cross_validation)

scores_1.mean()
scores_20.mean()
```



```{r, version = "R"}
ins_cvs <- vfold_cv(ins, v = 10)

poly_1_cv <- lr_mod %>%
  fit_resamples(charges ~ bmi,
                resamples = ins_cvs)

poly_2_cv <- lr_mod %>%
  fit_resamples(charges ~ poly(bmi, 2),
                resamples = ins_cvs)
```

```{r, version = "R"}
poly_1_cv %>% collect_metrics()

poly_2_cv %>% collect_metrics()
```




## Your turn

Suppose you want to fit a regression that predicts `charges` from `age` and `bmi`.

Consider four models:

* `age` and `bmi` both have polynomial 1
* `age` has polynomial 1, `bmi` has polynomial 2
* `age` has polynomial 2, `bmi` has polynomial 1
* `age` and `bmi` both have polynomial 2


(No interactions term for any model.)


Which model is best according to a **Cross-Validation study** with 10 splits?

