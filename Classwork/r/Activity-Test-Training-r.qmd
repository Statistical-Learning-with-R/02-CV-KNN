---
title: "Test and Training Error"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
---

## Setup

Declare your libraries:

```{r}
#| label: libraries-r
#| include: false
library(tidyverse)
library(tidymodels)
```


## Code from slides

```{r}
ins <- read_csv("https://www.dropbox.com/s/bocjjyo1ehr5auz/insurance_costs_1.csv?dl=1")
head(ins)
```


```{r}
lr_mod <- linear_reg() %>%
  set_mode("regression") %>%
  set_engine("lm")

poly_mod_1 <- lr_mod %>%
  fit(charges ~ bmi, data = ins)

poly_mod_20 <- lr_mod %>%
  fit(charges ~ poly(bmi, 20), data = ins)
```


```{r}
ins <- ins %>%
  mutate(
    preds_1 = predict(poly_mod_1, 
                      new_data = ins, 
                      type = "raw"),
    preds_20 = predict(poly_mod_20, 
                       new_data = ins, 
                       type = "raw")
  )
```


```{r}
poly_mod_1$fit %>% summary()
poly_mod_20$fit %>% summary()
```


```{r}
ins %>% 
  rmse(truth = charges, 
          estimate = preds_1)
ins %>% 
  rmse(truth = charges, 
          estimate = preds_20)
```


```{r}
ins %>% 
  ggplot() +
  geom_point(aes(x = bmi, y = charges)) +
  geom_line(aes(x = bmi, y = preds_20),
            color = "red") +
  geom_line(aes(x = bmi, y = preds_1),
            color = "blue")

```

```{r}
# Set seed, so our "randomness" is consistent
set.seed(190498)

# Establish division of data
ins_split <- ins %>% initial_split()

# Save test and training as separate datasets

ins_test <- ins_split %>% testing()
ins_train <- ins_split %>% training()

# Check what happened

dim(ins_test)
dim(ins_train)
```


```{r}
poly_mod_1 <- lr_mod %>%
  fit(charges ~ bmi, data = ins_train)

poly_mod_20 <- lr_mod %>%
  fit(charges ~ poly(bmi, 20), data = ins_train)

ins_test <- ins_test %>%
  mutate(
    preds_1 = predict(poly_mod_1, 
                      new_data = ins_test, 
                      type = "raw"),
    preds_20 = predict(poly_mod_20, 
                       new_data = ins_test, 
                       type = "raw")
  )
```


```{r}
ins_test %>% 
  rmse(truth = charges, 
          estimate = preds_1)

ins_test %>% 
  rmse(truth = charges, 
          estimate = preds_20)
```


## Your turn

Suppose you want to fit a regression that predicts `charges` from `age` and `bmi`.

Consider four models:

-   `age` and `bmi` both have polynomial 1
-   `age` has polynomial 1, `bmi` has polynomial 2
-   `age` has polynomial 2, `bmi` has polynomial 1
-   `age` and `bmi` both have polynomial 2

(No interactions term for any model.)

Which model is best according to the **adjusted R-squared** on the training data?

Which model is best according to the **MSE** of the **test** data?
